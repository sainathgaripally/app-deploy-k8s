  name: Java CI with SonarQube

  on:
    workflow_dispatch:
  
  jobs:
    build_and_analyze:
      name: Build, Test, and SonarQube Scan
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: 17

        - name: Cache maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2
            key: ${{ runner.os }}-maven-${{ hashfiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Build and run steps
          run: mvn clean verify

        - name: Run SonarQube Scan
          working-directory: .
          env:
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            mvn sonar:sonar \
            -Dsonar.projectkey=myorg_myapp \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.host.login=${{ env.SONAR_TOKEN }} \
            -Dskiptests=false
            
        - name: Check SonarQube Quality Gate (self-hosted)
          id: qualitygate
          working-directory: .
          env:
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            echo "Waiting for SonarQube analysis to complete..."
            sleep 30
            analysisId=$(grep "ceTaskId" .scannerwork/report-task.txt | cut -d'=' -f2)
            gateStatus=$(curl -s -u "${SONAR_TOKEN}:" \
              "${SONAR_HOST_URL}/api/qualitygates/project_status?analysisId=${analysisId}" \
              | jq -r '.projectStatus.status')
            echo "Quality Gate: $gateStatus"
            echo "quality_gate_passed=$([ "$gateStatus" = "OK" ] && echo true || echo false)" >> $GITHUB_OUTPUT

