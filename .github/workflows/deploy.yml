  name: Java CI with SonarQube

  on:
    workflow_dispatch:
    pull_request:
      branches:
        - dev
      types: [ opened, synchronized ]
    push:
      branches: 
        - dev
  permissions: 
    contents: read
    issues: write
    pull-requests: write
    
  jobs:
    build_and_analyze:
      name: Build, Test, and SonarQube Scan
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup Java
          uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: 17

        - name: Cache maven packages
          uses: actions/cache@v4
          with:
            path: ~/.m2
            key: ${{ runner.os }}-maven-${{ hashfiles('**/pom.xml') }}
            restore-keys: |
              ${{ runner.os }}-maven-

        - name: Build and run steps
          run: mvn clean verify

        - name: Run SonarQube Scan
          working-directory: .
          env:
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            mvn sonar:sonar \
            -Dsonar.projectkey=myorg_myapp \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.host.login=${{ env.SONAR_TOKEN }} \
            -Dskiptests=false

        - name: Wait for SonarQube Quality Gate (Python)
          id: sonarcheck
          run: |
            pip install requests
            python scripts/wait_for_quality_gate.py
          env:
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        - name: Upload JaCoCo Coverage Report
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: jacoco-report
            path: target/site/jacoco/

        - name: Print id
          run: | 
            echo ${{ steps.sonarcheck.outputs.gate_status }}
            echo ${{ steps.sonarcheck.outputs.gate_message }}

        - name: Comment on PR
          if: github.event_name == 'pull_request'
          uses: marocchino/sticky-pull-request-comment@v2
          with:
            header: sonarqube-quality-gate
            message: |
                üèÅ **SonarQube Quality Gate Result**
                ${{ steps.sonarcheck.outputs.gate_message }}
                ${{ steps.sonarcheck.outputs.gate_status }}

    build_and_deploy:
      runs-on: ubuntu-latest
      needs: [build_and_analyze]
      if: github.event_name == 'push'
      steps:
        - name: Run step1
          run: echo "Running step1"
